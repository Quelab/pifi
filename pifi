#! /bin/bash

ScriptDirectory="$(dirname $0)"
Interface="$1"
#Hostapd="$ScriptDirectory/hostapd"
ConfigFile="./pifi-$Interface.conf"
DhcpdConfigFile="./pifi-$Interface-dhcpd.conf"
HostapdConfigFile="./pifi-$Interface-hostapd.conf"
WpaConfigFile="./pifi-$Interface-wpa.conf"

State="Idle"
#AccessPointDriver="nl80211"
AccessPointSsid="RaspberryPi"
AccessPointPassphrase="raspberry"
AccessPointChannel="6"
AccessPointGateway="192.168.10.1"
AccessPointSubnetMask="255.255.255.0"
AccessPointSubnet="192.168.10.0"
AccessPointFirst="192.168.10.100"
AccessPointLast="192.168.10.200"
AccessPointBroadcast="192.168.10.255"
AccessPointDefaultLease="600"
AccessPointMaxLease="7200"
AccessPointDomain="local"
WiFiDriver="wext"
WiFiSsid="RaspberryPi"
WiFiPassphrase="raspberry"
WiFiTimeout="0"
WiFiList=""

if [[ "$Interface" == "" ]]; then
  echo "Usage: $0 INTERFACE [-d | -i | -a | -w | -s]" && exit 1
fi

determine_driver(){
  # rtl8192cu has a broken hostap driver
  lsusb -t |grep rtl8192cu > /dev/null
  if [ $? -eq 0 ]; then
    Hostapd="rtl-hostapd"
    AccessPointDriver="rtl871xdrv"
  else
    Hostapd="hostapd"
    AccessPointDriver="nl80211"
  fi
}

write_config() {
  cat << EOF > $ConfigFile
State="$State"
AccessPointDriver="$AccessPointDriver"
AccessPointSsid="$AccessPointSsid"
AccessPointPassphrase="$AccessPointPassphrase"
AccessPointChannel="$AccessPointChannel"
AccessPointGateway="$AccessPointGateway"
AccessPointSubnetMask="$AccessPointSubnetMask"
AccessPointSubnet="$AccessPointSubnet"
AccessPointFirst="$AccessPointFirst"
AccessPointLast="$AccessPointLast"
AccessPointBroadcast="$AccessPointBroadcast"
AccessPointDefaultLease="$AccessPointDefaultLease"
AccessPointMaxLease="$AccessPointMaxLease"
AccessPointDomain="$AccessPointDomain"
WiFiDriver="$WiFiDriver"
WiFiSsid="$WiFiSsid"
WiFiPassphrase="$WiFiPassphrase"
WiFiTimeout="$WiFiTimeout"
WiFiList="$WiFiList"
EOF
}

ip_address() {
  ifconfig $Interface | grep "inet " | awk '{print $2}' | cut -d':' -f2
}

disable_networking() {
  killall dhcpd $Hostapd wpa_supplicant dhcpcd &> /dev/null
  ifconfig $Interface down &> /dev/null
  ifconfig $Interface 0.0.0.0 up &> /dev/null
  ifconfig $Interface down &> /dev/null
}

host_ap() {
  Unassociated=$(iw dev $Interface link | grep "Not connected")
#Unassociated=$(iwconfig $Interface | grep unassociated) # ?"Not-Associated"

  if [[ "$Unassociated" != "" ]]; then
    disable_networking
  fi

  IpAddress=$(ip_address)

  if [[ "$IpAddress" != "$AccessPointGateway" ]]; then
    ifconfig $Interface down
    ifconfig $Interface $AccessPointGateway netmask $AccessPointSubnetMask up
  fi

  DhcpdPid=$(pidof dhcpd)

  if [[ "$DhcpdPid" == "" ]]; then
    cat << EOF > $DhcpdConfigFile
authoritative;

subnet $AccessPointSubnet netmask $AccessPointSubnetMask {
  range $AccessPointFirst $AccessPointLast;
  option broadcast-address $AccessPointBroadcast;
  option routers $AccessPointGateway;
  default-lease-time $AccessPointDefaultLease;
  max-lease-time $AccessPointMaxLease;
  option domain-name "$AccessPointDomain";
  option domain-name-servers 8.8.8.8, 8.8.4.4;
}
EOF

    dhcpd -cf $DhcpdConfigFile $Interface &> /dev/null && rm $DhcpdConfigFile
  fi

  HostapdPid=$(pidof $Hostapd)

  if [[ "$HostapdPid" == "" ]]; then
    cat << EOF > $HostapdConfigFile
interface=$Interface
driver=$AccessPointDriver
ssid=$AccessPointSsid
hw_mode=g
channel=$AccessPointChannel
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=$AccessPointPassphrase
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
EOF

    $Hostapd -B $HostapdConfigFile &> /dev/null && rm $HostapdConfigFile
  fi

  WiFiList=$(iw dev $Interface scan ap-force | grep SSID | cut -d':' -f2 | grep -v '""' | sort | uniq | tr '\n' ',' | sed 's/"//g' | sed 's/,$/\n/g')
  write_config
}

wifi_connect() {
  Now=$(date +%s)
  IpAddress=$(ip_address)
  WpaSupplicantPid=$(pidof wpa_supplicant)
  DhcpcdPid=$(pidof dhcpcd)

  if [[ "$IpAddress" != "" ]]; then
    State="WiFi_Connected"
    write_config
  elif [[ $Now -gt $WiFiTimeout ]]; then
    State="AccessPoint"
    write_config
  elif [[ "$WpaSupplicantPid" == "" ]]; then
    wpa_passphrase "$WiFiSsid" "$WiFiPassphrase" > $WpaConfigFile
    wpa_supplicant -B -D $WiFiDriver -i $Interface -c $WpaConfigFile &> /dev/null && rm $WpaConfigFile
  elif [[ "$DhcpcdPid" == "" ]]; then
    dhcpcd -b $Interface &> /dev/null
  fi
}

wifi_reconnect() {
  IpAddress=$(ip_address)
  WpaSupplicantPid=$(pidof wpa_supplicant)
  DhcpcdPid=$(pidof dhcpcd)

  if [[ "$IpAddress" != "" ]]; then
    State="WiFi_Connected"
    write_config
  elif [[ "$WpaSupplicantPid" == "" ]]; then
    wpa_passphrase "$WiFiSsid" "$WiFiPassphrase" > $WpaConfigFile
    wpa_supplicant -B -D $WiFiDriver -i $Interface -c $WpaConfigFile &> /dev/null && rm $WpaConfigFile
  elif [[ "$DhcpcdPid" == "" ]]; then
    dhcpcd -b $Interface &> /dev/null
  fi
}

wifi_connected() {
  IpAddress=$(ip_address)
  WpaSupplicantPid=$(pidof wpa_supplicant)
  DhcpcdPid=$(pidof dhcpcd)

  if [[ "$IpAddress" == "" ]]; then
    State="WiFi_Reconnecting"
    write_config
  elif [[ "$WpaSupplicantPid" == "" ]]; then
    wpa_passphrase "$WiFiSsid" "$WiFiPassphrase" > $WpaConfigFile
    wpa_supplicant -B -D $WiFiDriver -i $Interface -c $WpaConfigFile &> /dev/null && rm $WpaConfigFile
  elif [[ "$DhcpcdPid" == "" ]]; then
    dhcpcd -b $Interface &> /dev/null
  fi
}

load_config() {
  if [[ -f $ConfigFile ]]; then
    . $ConfigFile
  fi
}

run_once() {
  if [[ "$State" == "Idle" ]]; then
    disable_networking
  elif [[ "$State" == "AccessPoint" ]]; then
    State="AccessPoint_Hosting"
    write_config
    disable_networking
  elif [[ "$State" == "AccessPoint_Hosting" ]]; then
    host_ap
  elif [[ "$State" == "WiFi" ]]; then
    State="WiFi_Connecting"
    WiFiTimeout=$(date -d 'today + 1 minutes' +%s)
    write_config
    disable_networking
  elif [[ "$State" == "WiFi_Connecting" ]]; then
    wifi_connect
  elif [[ "$State" == "WiFi_Reconnecting" ]]; then
    wifi_reconnect
  elif [[ "$State" == "WiFi_Connected" ]]; then
    wifi_connected
  else
    echo "Unknown state: $State" && exit 2
  fi
}

run_daemon() {
  while [ : ]; do
    load_config
    run_once
    sleep 5
  done
}

determine_driver
load_config

if [[ "$2" == "-a" ]]; then
  State="AccessPoint"
  AccessPointSsid="$3"
  AccessPointPassphrase="$4"
  write_config
elif [[ "$2" == "-w" ]]; then
  State="WiFi"
  WiFiSsid="$3"
  WiFiPassphrase="$4"
  write_config
elif [[ "$2" == "-i" ]]; then
  State="Idle"
  write_config
elif [[ "$2" == "-s" ]]; then
  echo "$State"
elif [[ "$2" == "-l" ]]; then
  echo "$WiFiList"
elif [[ "$2" == "-d" ]]; then
  cd "$3"
  run_daemon
elif [[ "$2" != "" ]]; then
  echo "Unknown option: $2" && exit 1
else
  run_once
fi

